# cargo-deny configuration file
# See https://embarkstudios.github.io/cargo-deny/

# Note: running `cargo deny check` requires this file to be at the root of the workspace

[advisories]
# Vulnerability database source
db-path = "~/.cargo/advisory-db"
db-urls = ["https://github.com/rustsec/advisory-db"]

# Ignore specific advisories (use with caution and document why)
ignore = [
    # RSA timing vulnerability (RUSTSEC-2023-0071)
    # Required for GitHub JWT generation. No practical mitigation available yet.
    # Risk is acceptable for our use case (bot authentication, not user secrets)
    # Tracked: https://github.com/RustCrypto/RSA/issues/19
    "RUSTSEC-2023-0071",

    # paste crate no longer maintained (RUSTSEC-2024-0436)
    # Used transitively through azure_core v0.21.0
    # Will be resolved when Azure SDK updates their dependencies
    "RUSTSEC-2024-0436",

    # instant crate unmaintained (RUSTSEC-2024-0384)
    # Used transitively through azure_core v0.21.0 -> http-types -> fastrand -> instant
    # Will be resolved when Azure SDK updates to newer versions
    "RUSTSEC-2024-0384",
]

[licenses]
# Licenses we allow
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-3.0",
    "Zlib",
    "MPL-2.0",
]

# License clarity requirements
confidence-threshold = 0.8

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "allow"
# Wildcards (*) are not allowed in version requirements
wildcards = "deny"
# Highlight crates with specific issues
highlight = "all"

# List of crates that are allowed despite having duplicates
# (mostly Windows system dependencies that can't be unified easily)
skip = [
    { name = "windows_x86_64_gnullvm" },
    { name = "windows_x86_64_msvc" },
    { name = "windows_x86_64_gnu" },
    { name = "windows_i686_msvc" },
    { name = "windows-sys" },
    { name = "windows-targets" },
]

# Specific crate bans (if any)
deny = [
    # Deny old openssl versions
    #{ name = "openssl", version = "<0.10" },
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is not
# in the allow list is encountered
unknown-registry = "deny"
unknown-git = "deny"

# Allowed registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# Allow git sources from these organizations
allow-git = []
